package guis;

import entidades.Apuestas;
import entidades.Casilla;
import entidades.Dado;
import entidades.Ficha;
import entidades.Jugador;
import entidades.Partida;
import entidades.Tablero;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis Gonzalo Cervantes Rivera 00000228549 Gabriel Francisco Piñuelas
 * Ramos 00000230626 Ricardo Pacheco Urias 00000229178 Abraham Sered Gómez
 * Martínez 00000228796
 *
 */
public class DlgCrearPartida extends javax.swing.JDialog {

    public DlgCrearPartida() {
        initComponents();
    }

    /**
     * Creates new form DlgCrearPartida2
     */
    public DlgCrearPartida(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comboBoxCasillas = new javax.swing.JComboBox<>();
        comboBoxNumJugadores = new javax.swing.JComboBox<>();
        comboBoxFichas = new javax.swing.JComboBox<>();
        campoTextoFondoApuestas = new javax.swing.JTextField();
        campoTextoMontoPorApuesta = new javax.swing.JTextField();
        botonCrear = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Jokerman", 1, 18)); // NOI18N
        jLabel1.setText("Casillas por aspa");

        jLabel2.setFont(new java.awt.Font("Jokerman", 1, 18)); // NOI18N
        jLabel2.setText("Número de jugadores");

        jLabel3.setFont(new java.awt.Font("Jokerman", 1, 18)); // NOI18N
        jLabel3.setText("Fichas por jugador");

        jLabel4.setFont(new java.awt.Font("Jokerman", 1, 18)); // NOI18N
        jLabel4.setText("Fondo de apuestas");

        jLabel5.setFont(new java.awt.Font("Jokerman", 1, 18)); // NOI18N
        jLabel5.setText("Monto por apuesta");

        comboBoxCasillas.setFont(new java.awt.Font("Jokerman", 1, 12)); // NOI18N
        comboBoxCasillas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "12", "14" }));

        comboBoxNumJugadores.setFont(new java.awt.Font("Jokerman", 1, 12)); // NOI18N
        comboBoxNumJugadores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "3", "4" }));
        comboBoxNumJugadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxNumJugadoresActionPerformed(evt);
            }
        });

        comboBoxFichas.setFont(new java.awt.Font("Jokerman", 1, 12)); // NOI18N
        comboBoxFichas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "3", "4", "5", "6" }));
        comboBoxFichas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxFichasActionPerformed(evt);
            }
        });

        campoTextoFondoApuestas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTextoFondoApuestasActionPerformed(evt);
            }
        });

        botonCrear.setFont(new java.awt.Font("Jokerman", 1, 18)); // NOI18N
        botonCrear.setText("Crear");
        botonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearActionPerformed(evt);
            }
        });

        botonCancelar.setFont(new java.awt.Font("Jokerman", 1, 18)); // NOI18N
        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Jokerman", 1, 24)); // NOI18N
        jLabel6.setText("Configuración de Partida");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonCrear)
                        .addGap(46, 46, 46)
                        .addComponent(botonCancelar))
                    .addComponent(comboBoxFichas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBoxNumJugadores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBoxCasillas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campoTextoMontoPorApuesta)
                    .addComponent(campoTextoFondoApuestas))
                .addGap(91, 91, 91))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(129, 129, 129))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboBoxCasillas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboBoxNumJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboBoxFichas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(campoTextoFondoApuestas, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoTextoMontoPorApuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCrear)
                    .addComponent(botonCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearActionPerformed
        FrmPartida10 xd = new FrmPartida10(crearPartida());

        int FondoApuesta = Integer.parseInt(campoTextoFondoApuestas.getText());
        int MontoApuesta = Integer.parseInt(campoTextoMontoPorApuesta.getText());
        int numJugadores = Integer.parseInt(comboBoxNumJugadores.getSelectedItem().toString());

        System.out.println("FA: " + FondoApuesta);
        System.out.println("MA: " + MontoApuesta);

        try {

            if (FondoApuesta > MontoApuesta) {
                crearPartida();
                iniciarPartida();
                System.out.println("numJugadors: " + numJugadores);
                xd.LblnumJugadores.setText(" " + numJugadores);
                // xd.Turno.setText(comboBoxNumJugadores.getSelectedItem().toString());
                dispose();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Llene correctamente los datos!");
        }


    }//GEN-LAST:event_botonCrearActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        this.dispose();
        FrmMenu menu = new FrmMenu();
        menu.setVisible(true);
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void campoTextoFondoApuestasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTextoFondoApuestasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTextoFondoApuestasActionPerformed

    private void comboBoxNumJugadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxNumJugadoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxNumJugadoresActionPerformed

    private void comboBoxFichasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxFichasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxFichasActionPerformed

    public boolean validarMonto() {
        try {
            if (esNumero(campoTextoMontoPorApuesta.getText().trim()) && esNumero(campoTextoFondoApuestas.getText().trim())) {

                float maximo = 10000000;

                float monto = Float.parseFloat(campoTextoMontoPorApuesta.getText());
                float fondo = Float.parseFloat(campoTextoFondoApuestas.getText());
                if ((monto > 0 || monto >= maximo) && (fondo > 0 || fondo >= maximo)) {
                    this.confirmacion = 1;
                    JOptionPane.showMessageDialog(null, "Se han validado los datos correctamente");
                    return true;
                }
            } else {
                JOptionPane.showMessageDialog(null, "Solo se aceptan números");
            }
        } 
        
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "LLene correctamente los datos SOLO NÚMEROS");
            return false;
        }
        return false;
    }

    public void vaciar() {
        this.campoTextoMontoPorApuesta.setText("");
        this.campoTextoFondoApuestas.setText("");
    }

    public static boolean esNumero(String numero) {
        return numero.matches("[0-9]*");
    }

    public Partida crearPartida() {
        int numJugadores = Integer.parseInt((String) this.comboBoxNumJugadores.getSelectedItem());

        int fondo = 0;
        int monto = 0;
        if (validarMonto()) {
            monto = Integer.parseInt(campoTextoMontoPorApuesta.getText());
            fondo = Integer.parseInt(campoTextoFondoApuestas.getText());
        }

        numCasillas = Integer.parseInt((String) this.comboBoxCasillas.getSelectedItem());

        int numFichas = Integer.parseInt((String) this.comboBoxFichas.getSelectedItem());

        Apuestas apuestas = new Apuestas(fondo, monto);
        Tablero tablero = new Tablero(this.llenarCasillas(numCasillas * 2 * 4 + 4, numFichas));
        Jugador[] jugadores = this.llenarJugadores(numJugadores, apuestas);

        for (Jugador j : jugadores) {
            j.setFichas(this.llenarFichas(numFichas, j));
        }

        return new Partida(numCasillas, tablero, jugadores, this.llenarDados(), gen());
    }

    public int gen() {
        Random r = new Random(System.currentTimeMillis());
        return ((1 + r.nextInt(2)) * 10000 + r.nextInt(10000));
    }

    public void iniciarPartida() {
        try {
            if (confirmacion == 0) {
                JOptionPane.showMessageDialog(null, "Es necesario que se validen los datos");
                return;
            }
            if (numCasillas == 10) {
                FrmPartida10 partida = new FrmPartida10(crearPartida());
                FrmMenu.evento.register(partida);
                FrmMenu.evento.post(this.crearPartida());
                partida.setVisible(true);
                this.setVisible(false);
            }
            if (numCasillas == 12) {
                FrmPartida12 partida = new FrmPartida12(crearPartida());
                FrmMenu.evento.register(partida);
                FrmMenu.evento.post(this.crearPartida());
                partida.setVisible(true);
                this.setVisible(false);
            }
            if (numCasillas == 14) {
                FrmPartida14 partida = new FrmPartida14(crearPartida());
                FrmMenu.evento.register(partida);
                FrmMenu.evento.post(this.crearPartida());
                partida.setVisible(true);
                this.setVisible(false);
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Dato Erróneo");
        }
    }

    public Dado[] llenarDados() {
        Dado[] dados = new Dado[5];
        for (int i = 0; i < 5; i++) {
            Dado dado = new Dado();
            dados[i] = dado;
        }
        return dados;
    }

    public Jugador[] llenarJugadores(int numJugadores, Apuestas apuesta) {
        Jugador[] jugadores = new Jugador[numJugadores];
        for (int i = 1; i < numJugadores + 1; i++) {
            jugadores[i - 1] = new Jugador(apuesta);
        }
        return jugadores;
    }

    public Casilla[] llenarCasillas(int numCasillas, int numFichas) {
        Casilla[] casillas = new Casilla[numCasillas];
        for (int i = 1; i < numCasillas; i++) {
            casillas[i - 1] = new Casilla(i, new Ficha[numFichas]);
        }
        return casillas;
    }

    public Ficha[] llenarFichas(int numFichas, Jugador jugador) {
        Ficha[] fichas = new Ficha[numFichas];
        for (int i = 1; i < numFichas + 1; i++) {
            fichas[i - 1] = new Ficha(i - 1, -1);
        }
        return fichas;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonCrear;
    public static javax.swing.JTextField campoTextoFondoApuestas;
    private javax.swing.JTextField campoTextoMontoPorApuesta;
    private javax.swing.JComboBox<String> comboBoxCasillas;
    private javax.swing.JComboBox<String> comboBoxFichas;
    public static javax.swing.JComboBox<String> comboBoxNumJugadores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
    int confirmacion = 0;
    static int numCasillas = 0;
}
